name: 🏀 Basketball Club Crawler

on:
  # Scheduled: Monatlich am 1. um 02:00 UTC
  schedule:
    - cron: '0 2 1 * *'  # Jeden 1. des Monats
  
  # Manuell ausführbar
  workflow_dispatch:
    inputs:
      verband:
        description: 'Verband-ID (leer = alle)'
        required: false
        type: string

jobs:
  crawl:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Max 1 Stunde
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: basketball-app/package-lock.json
      
      - name: 📦 Install Dependencies
        working-directory: basketball-app
        run: npm ci
      
      - name: 🗂️ Create Backup
        working-directory: basketball-app
        run: |
          if [ -f "src/shared/data/clubs-germany.json" ]; then
            mkdir -p ../backups
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)
            cp src/shared/data/clubs-germany.json ../backups/clubs-germany-$TIMESTAMP.json
            echo "✅ Backup erstellt: clubs-germany-$TIMESTAMP.json"
          fi
      
      - name: 🏀 Run Crawler (ALL Verbände)
        if: ${{ github.event.inputs.verband == '' }}
        working-directory: basketball-app
        run: npm run crawl:clubs:all
      
      - name: 🏀 Run Crawler (Single Verband)
        if: ${{ github.event.inputs.verband != '' }}
        working-directory: basketball-app
        run: npm run crawl:clubs -- --verband=${{ github.event.inputs.verband }}
      
      - name: 📊 Check Output
        working-directory: basketball-app
        run: |
          if [ -f "src/shared/data/clubs-germany.json" ]; then
            echo "📁 Output-Datei vorhanden"
            FILE_SIZE=$(du -h src/shared/data/clubs-germany.json | cut -f1)
            echo "📦 Größe: $FILE_SIZE"
            
            # Metadata anzeigen
            if command -v jq &> /dev/null; then
              echo "📋 Metadata:"
              jq '.metadata' src/shared/data/clubs-germany.json
            fi
          else
            echo "❌ Keine Output-Datei gefunden!"
            exit 1
          fi
      
      - name: 💾 Upload Artifact (Backup)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: clubs-germany-backup-${{ github.run_number }}
          path: |
            basketball-app/src/shared/data/clubs-germany.json
            backups/*.json
          retention-days: 90
      
      - name: 📝 Commit & Push Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add basketball-app/src/shared/data/clubs-germany.json
          
          # Nur committen wenn es Änderungen gibt
          if git diff --staged --quiet; then
            echo "✅ Keine Änderungen - Skip Commit"
          else
            TIMESTAMP=$(date +%Y-%m-%d)
            git commit -m "chore: Update Club-Daten ($TIMESTAMP) [skip ci]"
            git push
            echo "✅ Änderungen committed und gepusht"
          fi
      
      - name: 📧 Notification on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '❌ Basketball Crawler fehlgeschlagen',
              body: `Der automatische Crawler-Lauf ist fehlgeschlagen.\n\n**Run:** ${runUrl}\n**Datum:** ${new Date().toISOString()}\n\nBitte Logs prüfen.`,
              labels: ['automation', 'bug']
            });
